Initial state:
( mSpec.OFF mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id7 ) error=0 states=0 
(#time==x && x==xp && xp==0)
Note: The 'strategy' is not guaranteed to be a strategy.

Strategy to avoid losing:

State: ( mSpec.ERR mSpec_p.BRIGHT Env._id4 Sys._id5 To._id6 Shield._id9 ) error=1 states=2 
When you are in (xp==0), take transition Shield._id9->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.OFF mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id7 ) error=0 states=0 
While you are in	(x<=3 && x==xp), wait.

State: ( mSpec.ERR mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id8 ) error=1 states=1 
When you are in (xp<5), take transition Shield._id8->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.ERR mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id7 ) error=1 states=1 
When you are in (xp==5), take transition Shield._id7->Shield._id7 { states == 1 && xp == 5, bright_p!, 1 }
mSpec_p.LIGHT->mSpec_p.BRIGHT { xp >= 1, bright_p?, xp := 0, states := 2 }
While you are in	(xp<1), wait.
When you are in (1<=xp && xp<=5), take transition Shield._id7->Shield._id7 { error == 1, bright_p!, 1 }
mSpec_p.LIGHT->mSpec_p.BRIGHT { xp >= 1, bright_p?, xp := 0, states := 2 }
When you are in (xp==5), take transition Shield._id7->Shield._id7 { error == 1, off_p!, 1 }
mSpec_p.LIGHT->mSpec_p.OFF { xp >= 5, off_p?, xp := 0, states := 0 }

State: ( mSpec.ERR mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id10 ) error=1 states=0 
When you are in (xp<=3), take transition Shield._id10->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.LIGHT mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id7 ) error=0 states=1 
While you are in	(x<=5 && x==xp), wait.

State: ( mSpec.ERR mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id8 ) error=1 states=0 
When you are in (xp<=3), take transition Shield._id8->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.OFF mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id9 ) error=0 states=0 
When you are in (1<=xp && x==0 && xp<=3), take transition Shield._id9->Shield._id7 { 1, blink_p!, 1 }
mSpec_p.OFF->mSpec_p.OFF { xp >= 1, blink_p?, xp := 0, states := 0 }

State: ( mSpec.BRIGHT mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id10 ) error=0 states=1 
While you are in	(x==0 && xp<=5), wait.

State: ( mSpec.ERR mSpec_p.BRIGHT Env._id4 Sys._id5 To._id6 Shield._id7 ) error=1 states=2 
While you are in	(xp<1), wait.
When you are in (1<=xp && xp<10), take transition Shield._id7->Shield._id7 { error == 1, off_p!, 1 }
mSpec_p.BRIGHT->mSpec_p.OFF { xp >= 1, off_p?, xp := 0, states := 0 }

State: ( mSpec.BRIGHT mSpec_p.BRIGHT Env._id4 Sys._id5 To._id6 Shield._id10 ) error=0 states=2 
While you are in	(x==xp && xp==0), wait.

State: ( mSpec.BRIGHT mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id10 ) error=0 states=0 
While you are in	(x==0 && xp<=3), wait.

State: ( mSpec.ERR mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id9 ) error=1 states=0 
When you are in (1<=xp && xp<=3), take transition Shield._id9->Shield._id7 { 1, blink_p!, 1 }
mSpec_p.OFF->mSpec_p.OFF { xp >= 1, blink_p?, xp := 0, states := 0 }
When you are in (xp<=3), take transition Shield._id9->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.ERR mSpec_p.OFF Env._id4 Sys._id5 To._id6 Shield._id7 ) error=1 states=0 
When you are in (xp==3), take transition Shield._id7->Shield._id7 { states == 0 && xp == 3, blink_p!, 1 }
mSpec_p.OFF->mSpec_p.OFF { xp >= 1, blink_p?, xp := 0, states := 0 }
While you are in	(xp<1), wait.
When you are in (1<=xp && xp<=3), take transition Shield._id7->Shield._id7 { error == 1, blink_p!, 1 }
mSpec_p.OFF->mSpec_p.OFF { xp >= 1, blink_p?, xp := 0, states := 0 }

State: ( mSpec.ERR mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id9 ) error=1 states=1 
When you are in (xp<=5), take transition Shield._id9->Shield._id7 { error == 1, tau, 1 }

State: ( mSpec.OFF mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id8 ) error=0 states=1 
When you are in (x-xp==-5 && xp==5), take transition Shield._id8->Shield._id7 { 1, off_p!, 1 }
mSpec_p.LIGHT->mSpec_p.OFF { xp >= 5, off_p?, xp := 0, states := 0 }

State: ( mSpec.ERR mSpec_p.LIGHT Env._id4 Sys._id5 To._id6 Shield._id10 ) error=1 states=1 
When you are in (xp<1), take transition Shield._id10->Shield._id7 { error == 1, tau, 1 }
